name: Test Dotfiles

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Homebrew
      uses: Homebrew/actions/setup-homebrew@master

    - name: Install shellcheck
      run: brew install shellcheck

    - name: Install pre-commit
      run: brew install pre-commit

    - name: Cache pre-commit environments
      uses: actions/cache@v4
      with:
        path: ~/.cache/pre-commit
        key: pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}

    - name: Run pre-commit hooks
      run: pre-commit run --all-files

    - name: Test shell scripts
      run: |
        find . -name "*.sh" -type f -exec shellcheck {} +

    - name: Validate YAML files
      run: |
        find . -name "*.yml" -o -name "*.yaml" | xargs -I {} sh -c 'echo "Checking {}"; python3 -c "import yaml; yaml.safe_load(open(\"{}\"))"'

    - name: Validate TOML files
      run: |
        pip3 install toml
        find . -name "*.toml" | xargs -I {} sh -c 'echo "Checking {}"; python3 -c "import toml; toml.load(\"{}\")"'

    - name: Check Brewfile syntax
      run: |
        brew bundle check --file=Brewfile || echo "Some packages might not be available in CI"

    - name: Test installation scripts (dry run)
      run: |
        export ZDOTDIR=/tmp/test-zsh
        mkdir -p "$ZDOTDIR"
        # Test critical functions without actually installing
        bash -n scripts/install.sh
        bash -n scripts/update.sh
        bash -n scripts/verify.sh

  lint:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pre-commit yamllint

    - name: Run yamllint
      run: |
        yamllint .github/workflows/

    - name: Check for secrets
      run: |
        pip install detect-secrets
        detect-secrets scan --baseline .secrets.baseline